{"version":3,"file":"react-responsive.umd.js","sources":["../src/hook.ts","../src/MediaQuery.tsx","../src/index.cjs.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ntype Query = { query: string };\r\n\r\nexport const useMediaQuery = ({ query }: Query): boolean => {\r\n    const matchMedia = window.matchMedia(query);\r\n    const [isMatch, setIsMatch] = useState(null);\r\n    useEffect(() => {\r\n        setIsMatch(matchMedia.matches);\r\n        const mediaCallback = (e: MediaQueryListEvent) => {\r\n            e.matches ? setIsMatch(true) : setIsMatch(false);\r\n        };\r\n        matchMedia.addEventListener(\"change\", mediaCallback);\r\n        return () => matchMedia.removeEventListener(\"change\", mediaCallback);\r\n    }, [query]);\r\n    return isMatch;\r\n};\r\n","import React from \"react\";\r\nimport { useMediaQuery } from \"./hook\";\r\n\r\ntype MediaFunctionsTypes = {\r\n    children: React.ReactNode | ((matches: boolean) => React.ReactNode);\r\n} & (\r\n    | { orientation: \"landscape\" | \"portrait\" }\r\n    | { minResolution: number | `${number}dppx` }\r\n    | { maxResolution: number | `${number}dppx` }\r\n    | { minWidth: number }\r\n    | { maxWidth: number }\r\n    | { minHeight: number }\r\n    | { maxHeight: number }\r\n);\r\n\r\nfunction parsePropsKey(string: string) {\r\n    return string.replace(/(?<=[a-z])(?=[A-Z])/g, \"-\").toLowerCase();\r\n}\r\n\r\nfunction getUnit(key: string, value: any) {\r\n    if (/resolution/i.test(key)) {\r\n        if (typeof value === \"number\") {\r\n            return `${value}dppx`;\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n    if (/width/i.test(key) || /height/i.test(key)) {\r\n        return `${value}px`;\r\n    }\r\n    return value;\r\n}\r\n\r\nexport default function MediaQuery(props: MediaFunctionsTypes) {\r\n    const generatorMediaQuery = (): string => {\r\n        let mediaString = \"\";\r\n        const entries = Object.entries(props);\r\n        entries.forEach(([key, value]) => {\r\n            if (key !== \"children\") {\r\n                if (mediaString.length === 0) {\r\n                    mediaString = `(${parsePropsKey(key)}: ${getUnit(\r\n                        key,\r\n                        value\r\n                    )})`;\r\n                } else {\r\n                    mediaString += ` and (${parsePropsKey(key)}: ${getUnit(\r\n                        key,\r\n                        value\r\n                    )})`;\r\n                }\r\n            }\r\n        });\r\n        return mediaString;\r\n    };\r\n\r\n    const allConditions = useMediaQuery({ query: generatorMediaQuery() });\r\n\r\n    return typeof props.children === \"function\" ? (\r\n        <>{props.children(allConditions)}</>\r\n    ) : allConditions ? (\r\n        <>{props.children}</>\r\n    ) : null;\r\n}\r\n","import MediaQuery from \"./MediaQuery\";\r\nimport { useMediaQuery } from \"./hook\";\r\n\r\nObject.assign(MediaQuery, {\r\n    useMediaQuery,\r\n});\r\n\r\nexport default MediaQuery;\r\n"],"names":["useMediaQuery","_ref","query","matchMedia","window","useState","isMatch","setIsMatch","useEffect","matches","e","addEventListener","mediaCallback","removeEventListener","string","replace","toLowerCase","getUnit","key","value","test","MediaQuery","props","mediaString","allConditions","Object","entries","forEach","length","parsePropsKey","children","_jsx","jsx","_Fragment","assign"],"mappings":"6TAIaA,IAAAA,EAAgB,SAA8BC,GAAA,MAA3BC,EAAAA,MACtBC,EAAaC,OAAOD,WAAWD,GACPG,EAAAA,EAAQA,SAAC,MAAhCC,EAASC,EAAAA,GAAAA,OAShB,OARAC,EAAAA,UAAU,WACND,EAAWJ,EAAWM,SACtB,MAAsB,SAACC,GACPH,IAAZG,EAAED,UAGN,OADAN,EAAWQ,iBAAiB,SAAUC,qBACfT,EAACU,oBAAoB,SAAUD,KACvD,CAACV,IACGI,GCAX,WAAuBQ,GACnB,SAAcC,QAAQ,uBAAwB,KAAKC,cAGvD,SAASC,EAAQC,EAAaC,GAC1B,MAAI,cAAcC,KAAKF,GACE,iBAAVC,EACPA,EAAA,OAGHA,EAED,SAASC,KAAKF,IAAQ,UAAUE,KAAKF,GAC3BC,EACb,KAEJA,EAEuBE,SAAAA,EAAWC,GAC/B,IACmBC,EAoBbC,EAAgBxB,EAAc,CAAEE,OApBnBqB,EAAG,GACFE,OAAOC,QAAQJ,GACvBK,QAAQ,SAAiB1B,GAAA,IAAAiB,EAAAjB,EAAA,GAAVkB,EACnBlB,EAAA,GAAY,aAARiB,IAC2B,IAAvBK,EAAYK,OACZL,MAAkBM,EAAcX,GAArB,KAA8BD,EACrCC,EACAC,GAFO,IAKXI,YAAwBM,EAAcX,GAASD,KAAAA,EAC3CC,EACAC,GAFO,OAQ1BI,KAID,MAAiC,mBAAnBD,EAAMQ,sBAChBC,EAAAC,IAAAC,WAAA,CAAAH,SAAGR,EAAMQ,SAASN,KAClBA,eACAO,EAAAA,IAAAE,EAAAA,SAAA,CAAAH,SAAGR,EAAMQ,WACT,YC1DRL,OAAOS,OAAOb,EAAY,CACtBrB,cAAAA"}